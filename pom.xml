<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>au.edu.uws.redbox-mint</groupId>
  <artifactId>mint-dev-uws</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>The Mint - UWS Development</name>
  <parent>
    <groupId>com.googlecode.redbox-mint</groupId>
    <artifactId>mint</artifactId>
    <version>1.5.2.2</version>
  </parent>
  <properties>
    <!-- Used in build -->
    <mint.version>1.5.2.2</mint.version>
    <!-- Runtime values, will replace placeholders
             in config and control scripts -->
    <project.home>/opt/mint-dev</project.home>
    <app.location.windows>${project.home}</app.location.windows>
    <app.location.linux>${project.home}</app.location.linux>             
    <server.port>9001</server.port>
    <amq.port>9201</amq.port>
    <amq.stomp.port>9202</amq.stomp.port>
    <dir.home>${project.home}/home</dir.home>
    <dir.portal>${project.home}/portal</dir.portal>
    <dir.server>${project.home}/server</dir.server>
    <dir.solr>${project.home}/solr</dir.solr>
    <dir.storage>${project.home}/storage</dir.storage>
    <dir.geonames>${dir.home}/geonames/solr</dir.geonames>
    <server.url.base>http://localhost:${server.port}/mint/</server.url.base>
    <smtp.host>smtp.uws.edu.au</smtp.host>
    <admin.email>l.harischandra@uws.edu.au</admin.email>
    <!-- Control scripts try to auto-detect proxy. Use this value if you
             want Java to specifically exclude certain hosts from proxying. -->
    <non.proxy.hosts>localhost</non.proxy.hosts>
  </properties>
  <dependencies>
    <!-- Mint Core - We want to explicitly define versions here because
             ReDBox is listed as both a dependency and a parent. Some odd
             consequences of using ${project.version} can result -->
    <dependency>
      <groupId>com.googlecode.redbox-mint</groupId>
      <artifactId>mint-project</artifactId>
      <type>pom</type>
      <version>${mint.version}</version>
    </dependency>
    <dependency>
      <groupId>com.googlecode.redbox-mint</groupId>
      <artifactId>mint</artifactId>
      <type>pom</type>
      <version>${mint.version}</version>
    </dependency>
    <dependency>
      <groupId>com.googlecode.redbox-mint</groupId>
      <artifactId>mint-config</artifactId>
      <version>${mint.version}</version>
    </dependency>
    <dependency>
      <groupId>com.googlecode.redbox-mint</groupId>
      <artifactId>plugin-transaction-curation-mint</artifactId>
      <version>${mint.version}</version>
    </dependency>
    <dependency>
      <groupId>com.googlecode.redbox-mint</groupId>
      <artifactId>sruclient-mint</artifactId>
      <version>${mint.version}</version>
    </dependency>
    <!-- Mint Curation Plugin -->
    <dependency>
      <groupId>com.googlecode.redbox-mint</groupId>
      <artifactId>plugin-transformer-handle</artifactId>
      <version>${mint.version}</version>
    </dependency>
  </dependencies>
  <profiles>
    <profile>
      <id>build-package</id>
      <properties>
        <app.location.windows>c:/tf2/mint</app.location.windows>
    	<app.location.linux>/opt/mint</app.location.linux>
        <server.url.base>http://localhost:${server.port}/mint/</server.url.base>
      </properties>
      <!-- Used for creating an install - omits local build system settings -->
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-assembly-plugin</artifactId>
            <executions>
              <execution>
                <id>make-assembly</id>
                <phase>package</phase>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <descriptors>
                    <descriptor>package.xml</descriptor>
                  </descriptors>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
  <!-- The standard build/deploy process for making a server -->
  <build>
    <resources>
      <resource>
        <directory>src/main/config/home</directory>
      </resource>
      <resource>
        <directory>src/main/config/portal</directory>
      </resource>
      <resource>
        <directory>src/main/config/server</directory>
      </resource>
      <resource>
        <directory>src/main/config/solr</directory>
      </resource>
    </resources>
    <plugins>
      <!-- 1st - Unpack Generic Mint setup -->
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.1</version>
        <executions>
          <execution>
            <id>unpack-home</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <includes>home/**,portal/**,server/**,solr/**</includes>
              <outputDirectory>${project.home}</outputDirectory>
              <artifactItems>
                <artifactItem>
                  <groupId>com.googlecode.redbox-mint</groupId>
                  <artifactId>mint-config</artifactId>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- 2nd - Deploy Institutional build over default Mint -->
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.4.3</version>
        <configuration>
          <encoding>UTF-8</encoding>
          <!-- Workaround bug MRESOURCES-104 -->
          <delimiters>
            <delimiter>${*}</delimiter>
          </delimiters>
          <useDefaultDelimiters>false</useDefaultDelimiters>
        </configuration>
        <executions>
          <!-- Configuration -->
          <execution>
            <id>copy-home</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${dir.home}</outputDirectory>
              <includeEmptyDirs>true</includeEmptyDirs>
              <overwrite>true</overwrite>
              <resources>
                <!-- Most config copied first as is -->
                <resource>
                  <directory>src/main/config/home</directory>
                  <filtering>false</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
          <!-- Web portal -->
          <execution>
            <id>copy-portal</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${dir.portal}</outputDirectory>
              <includeEmptyDirs>true</includeEmptyDirs>
              <overwrite>true</overwrite>
              <resources>
                <resource>
                  <directory>src/main/config/portal</directory>
                  <filtering>false</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
          <!-- Server files -->
          <execution>
            <id>copy-server</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${dir.server}</outputDirectory>
              <includeEmptyDirs>true</includeEmptyDirs>
              <overwrite>true</overwrite>
              <resources>
                <resource>
                  <directory>src/main/config/server</directory>
                  <filtering>false</filtering>
                  <excludes>
                    <exclude>**/*.bat</exclude>
                    <exclude>**/*.sh</exclude>
                  </excludes>
                </resource>
              </resources>
            </configuration>
          </execution>
          <!-- Control Scripts -->
          <execution>
            <id>copy-scripts</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${dir.server}</outputDirectory>
              <includeEmptyDirs>true</includeEmptyDirs>
              <overwrite>true</overwrite>
              <resources>
                <!-- Resolve some paths in our control scripts -->
                <resource>
                  <directory>src/main/config/server</directory>
                  <filtering>true</filtering>
                  <includes>
                    <include>**/*.bat</include>
                    <include>**/*.sh</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
          <!-- Solr logging -->
          <execution>
            <id>copy-solr</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${dir.solr}</outputDirectory>
              <includeEmptyDirs>true</includeEmptyDirs>
              <resources>
                <resource>
                  <directory>src/main/config/solr</directory>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Set executable attribute for shell scripts -->
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <phase>process-resources</phase>
            <configuration>
              <tasks>
                <chmod file="${dir.server}/*.sh" perm="740" />
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <repositories>
    <repository>
      <id>fascinator-snapshots</id>
      <url>http://dev.redboxresearchdata.com.au/nexus/content/repositories/central-snapshots/</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>redbox-nexus</id>
      <url>http://dev.redboxresearchdata.com.au/nexus/content/groups/public/</url>
    </repository>
  </repositories>
  <!-- <scm>
    <url>https://github.com/redbox-mint/mint-build-dev-handle</url>
    <developerConnection>scm:git:https://github.com/redbox-mint/mint-build-dev-handle</developerConnection>
    <tag>HEAD</tag>
  </scm> -->
  <distributionManagement>
		<snapshotRepository>
			<id>redbox-nexus-snapshots</id>
			<name>Redbox Nexus Snapshots</name>
			<url>http://dev.redboxresearchdata.com.au/nexus/content/repositories/snapshots/</url>
		</snapshotRepository>
		<repository>
			<id>redbox-nexus-releases</id>
			<name>Redbox Nexus Releases</name>
			<url>http://dev.redboxresearchdata.com.au/nexus/content/repositories/releases/</url>
		</repository>
	</distributionManagement>
</project>
